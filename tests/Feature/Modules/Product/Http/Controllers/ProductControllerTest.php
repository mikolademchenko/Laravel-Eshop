<?php

namespace Tests\Feature\Modules\Product\Http\Controllers;

use Tests\TestCase;

/**
 * @see \Modules\Product\Http\Controllers\ProductController
 */
class ProductControllerTest extends TestCase
{
    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('products.create'));

        $response->assertOk();
        $response->assertViewIs('product::create');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->delete(route('products.destroy', ['product' => $product]));

        $response->assertRedirect(route('products.index'));
        $this->assertModelMissing($product);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('products.edit', ['product' => $product]));

        $response->assertOk();
        $response->assertViewIs('product::edit');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('product.export'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function import_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('product.import'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function import_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\Product\Http\Controllers\ProductController::class,
            'import',
            \Modules\Post\Http\Requests\ImportRequest::class
        );
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('products.index'));

        $response->assertOk();
        $response->assertViewIs('product::index');
        $response->assertViewHas('products');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('products.store'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('products.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\Product\Http\Controllers\ProductController::class,
            'store',
            \Modules\Product\Http\Requests\Store::class
        );
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->put(route('products.update', ['product' => $product]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('products.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\Product\Http\Controllers\ProductController::class,
            'update',
            \Modules\Product\Http\Requests\Update::class
        );
    }

    // test cases...
}
