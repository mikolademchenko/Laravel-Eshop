<?php

namespace Tests\Feature\Modules\User\Http\Controllers;

use Tests\TestCase;

/**
 * @see \Modules\User\Http\Controllers\UserController
 */
class UserControllerTest extends TestCase
{
    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('users.create'));

        $response->assertOk();
        $response->assertViewIs('user::create');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->delete(route('users.destroy', ['user' => $user]));

        $response->assertRedirect(route('users.index'));
        $this->assertModelMissing($user);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('users.edit', ['user' => $user]));

        $response->assertOk();
        $response->assertViewIs('user::edit');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function impersonate_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('users.impersonate', ['user' => $user]));

        $response->assertRedirect(route('admin'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('users.index'));

        $response->assertOk();
        $response->assertViewIs('user::index');
        $response->assertViewHas('users');
        $response->assertViewHas('i');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function leave_impersonate_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('users.leave-impersonate'));

        $response->assertRedirect(route('admin'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function profile_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('user-profile'));

        $response->assertOk();
        $response->assertViewIs('user::user.users.profile');
        $response->assertViewHas('profile');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('users.show', ['user' => $user]));

        $response->assertOk();
        $response->assertViewIs('user::edit');
        $response->assertViewHas('user');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('users.store'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('users.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\User\Http\Controllers\UserController::class,
            'store',
            \Modules\User\Http\Requests\StoreRequest::class
        );
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->put(route('users.update', ['user' => $user]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('users.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\User\Http\Controllers\UserController::class,
            'update',
            \Modules\User\Http\Requests\UpdateRequest::class
        );
    }

    // test cases...
}
