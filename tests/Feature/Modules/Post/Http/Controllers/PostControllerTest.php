<?php

namespace Tests\Feature\Modules\Post\Http\Controllers;

use Tests\TestCase;

/**
 * @see \Modules\Post\Http\Controllers\PostController
 */
class PostControllerTest extends TestCase
{
    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('posts.create'));

        $response->assertOk();
        $response->assertViewIs('post::create');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->delete(route('posts.destroy', ['post' => $post]));

        $response->assertRedirect(back());
        $this->assertModelMissing($post);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('posts.edit', ['post' => $post]));

        $response->assertOk();
        $response->assertViewIs('post::edit');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function export_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('posts.export'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function import_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('posts.import'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(back());

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function import_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\Post\Http\Controllers\PostController::class,
            'import',
            \Modules\Post\Http\Requests\ImportRequest::class
        );
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('posts.index'));

        $response->assertOk();
        $response->assertViewIs('post::index');
        $response->assertViewHas('posts');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('posts.store'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('posts.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\Post\Http\Controllers\PostController::class,
            'store',
            \Modules\Post\Http\Requests\Store::class
        );
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->put(route('posts.update', ['post' => $post]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('posts.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\Post\Http\Controllers\PostController::class,
            'update',
            \Modules\Post\Http\Requests\Update::class
        );
    }

    /**
     * @test
     */
    public function upload_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('ckeditor.image-upload'), [
            // TODO: send request data
        ]);

        $response->assertOk();

        // TODO: perform additional assertions
    }

    // test cases...
}
