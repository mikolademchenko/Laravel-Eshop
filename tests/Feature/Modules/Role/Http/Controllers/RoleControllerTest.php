<?php

namespace Tests\Feature\Modules\Role\Http\Controllers;

use Tests\TestCase;

/**
 * @see \Modules\Role\Http\Controllers\RoleController
 */
class RoleControllerTest extends TestCase
{
    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('roles.create'));

        $response->assertOk();
        $response->assertViewIs('role::create');
        $response->assertViewHas('permission');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->delete(route('roles.destroy', ['role' => $role]));

        $response->assertRedirect(route('roles.index'));
        $this->assertModelMissing($role);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('roles.edit', ['role' => $role]));

        $response->assertOk();
        $response->assertViewIs('role::edit');
        $response->assertViewHas('role');
        $response->assertViewHas('permission');
        $response->assertViewHas('rolePermissions');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('roles.index'));

        $response->assertOk();
        $response->assertViewIs('role::index');
        $response->assertViewHas('roles');
        $response->assertViewHas('i');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('roles.show', ['role' => $role]));

        $response->assertOk();
        $response->assertViewIs('role::show');
        $response->assertViewHas('role');
        $response->assertViewHas('rolePermissions');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('roles.store'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('roles.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->put(route('roles.update', ['role' => $role]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('roles.index'));

        // TODO: perform additional assertions
    }

    // test cases...
}
