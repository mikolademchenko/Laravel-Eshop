<?php

namespace Tests\Feature\Modules\Order\Http\Controllers;

use Tests\TestCase;

/**
 * @see \Modules\Order\Http\Controllers\OrderController
 */
class OrderControllerTest extends TestCase
{
    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('orders.create'));

        $response->assertOk();
        $response->assertViewIs('order::create');
        $response->assertViewHas('order');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->delete(route('orders.destroy', ['order' => $order]));

        $response->assertRedirect(back());
        $this->assertModelMissing($order);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('orders.edit', ['order' => $order]));

        $response->assertOk();
        $response->assertViewIs('order::edit');
        $response->assertViewHas('order');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function income_chart_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('product.order.income'));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('orders.index'));

        $response->assertOk();
        $response->assertViewIs('order::index');
        $response->assertViewHas('orders');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function pdf_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('order.pdf', ['id' => $id]));

        $response->assertOk();

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('orders.show', ['order' => $order]));

        $response->assertOk();
        $response->assertViewIs('order::show');
        $response->assertViewHas('order');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('orders.store'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('home'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\Order\Http\Controllers\OrderController::class,
            'store',
            \Modules\Order\Http\Requests\Api\Store::class
        );
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->put(route('orders.update', ['order' => $order]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('orders.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\Order\Http\Controllers\OrderController::class,
            'update',
            \Modules\Order\Http\Requests\Api\Update::class
        );
    }

    // test cases...
}
