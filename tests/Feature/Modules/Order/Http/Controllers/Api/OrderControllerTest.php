<?php

namespace Tests\Feature\Modules\Order\Http\Controllers\Api;

use Modules\Order\Http\Controllers\Api\OrderController;
use Modules\Order\Http\Requests\Api\Store;
use Modules\Order\Http\Requests\Api\Update;
use Tests\TestCase;

/**
 * @see \Modules\Order\Http\Controllers\Api\OrderController
 */
class OrderControllerTest extends TestCase
{
    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        
        $response = $this->delete(route('order.destroy', ['order' => $order]));
        
        $response->assertOk();
        $this->assertModelMissing($order);
        // TODO: perform additional assertions
    }
    
    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        
        $response = $this->get(route('order.index'));
        
        $response->assertOk();
        // TODO: perform additional assertions
    }
    
    /**
     * @test
     */
    public function show_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        
        $response = $this->get(route('order.show', ['order' => $order]));
        
        $response->assertOk();
        // TODO: perform additional assertions
    }
    
    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        
        $response = $this->post(route('order.store'), [
            // TODO: send request data
        ]);
        
        $response->assertOk();
        // TODO: perform additional assertions
    }
    
    /**
     * @test
     */
    public function store_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            OrderController::class,
            'store',
            Store::class
        );
    }
    
    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');
        
        $response = $this->put(route('order.update', ['order' => $order]), [
            // TODO: send request data
        ]);
        
        $response->assertOk();
        // TODO: perform additional assertions
    }
    
    /**
     * @test
     */
    public function update_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            OrderController::class,
            'update',
            Update::class
        );
    }
    
    // test cases...
}
