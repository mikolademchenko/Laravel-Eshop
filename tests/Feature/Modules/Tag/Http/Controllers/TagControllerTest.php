<?php

namespace Tests\Feature\Modules\Tag\Http\Controllers;

use Tests\TestCase;

/**
 * @see \Modules\Tag\Http\Controllers\TagController
 */
class TagControllerTest extends TestCase
{
    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('tags.create'));

        $response->assertOk();
        $response->assertViewIs('tag::create');
        $response->assertViewHas('tag');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->delete(route('tags.destroy', ['tag' => $tag]));

        $response->assertRedirect(route('tags.index'));
        $this->assertModelMissing($tag);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('tags.edit', ['tag' => $tag]));

        $response->assertOk();
        $response->assertViewIs('tag::edit');
        $response->assertViewHas('tag');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('tags.index'));

        $response->assertOk();
        $response->assertViewIs('tag::index');
        $response->assertViewHas('tags');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('tags.store'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('tags.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\Tag\Http\Controllers\TagController::class,
            'store',
            \Modules\Tag\Http\Requests\Api\Store::class
        );
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->put(route('tags.update', ['tag' => $tag]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('post-tag.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\Tag\Http\Controllers\TagController::class,
            'update',
            \Modules\Tag\Http\Requests\Api\Store::class
        );
    }

    // test cases...
}
