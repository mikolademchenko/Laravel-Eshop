<?php

namespace Tests\Feature\Modules\Brand\Http\Controllers;

use Tests\TestCase;

/**
 * @see \Modules\Brand\Http\Controllers\BrandController
 */
class BrandControllerTest extends TestCase
{
    /**
     * @test
     */
    public function create_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('brands.create'));

        $response->assertOk();
        $response->assertViewIs('brand::create');
        $response->assertViewHas('brand');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function destroy_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->delete(route('brands.destroy', ['brand' => $brand]));

        $response->assertRedirect(route('brands.index'));
        $this->assertModelMissing($brand);

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function edit_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('brands.edit', ['brand' => $brand]));

        $response->assertOk();
        $response->assertViewIs('brand::edit');
        $response->assertViewHas('brand');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function index_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->get(route('brands.index'));

        $response->assertOk();
        $response->assertViewIs('brand::index');
        $response->assertViewHas('brands');

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->post(route('brands.store'), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('brands.index'));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function store_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\Brand\Http\Controllers\BrandController::class,
            'store',
            \Modules\Brand\Http\Requests\Store::class
        );
    }

    /**
     * @test
     */
    public function update_returns_an_ok_response()
    {
        $this->markTestIncomplete('This test case was generated by Shift. When you are ready, remove this line and complete this test case.');

        $response = $this->put(route('brands.update', ['brand' => $brand]), [
            // TODO: send request data
        ]);

        $response->assertRedirect(route('brands.edit', $brand));

        // TODO: perform additional assertions
    }

    /**
     * @test
     */
    public function update_validates_with_a_form_request()
    {
        $this->assertActionUsesFormRequest(
            \Modules\Brand\Http\Controllers\BrandController::class,
            'update',
            \Modules\Brand\Http\Requests\Store::class
        );
    }

    // test cases...
}
